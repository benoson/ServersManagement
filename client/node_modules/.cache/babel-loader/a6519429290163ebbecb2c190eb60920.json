{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05DE\\u05E9\\u05D9\\u05DE\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4\\\\assigment 3 - servers managment\\\\client\\\\src\\\\components\\\\filterPanel\\\\filterPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { store } from '../../redux/Store';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { ActionType } from '../../redux/ActionType';\nimport './filterPanel.css';\nexport default function FilterPanel() {\n  _s();\n\n  const isSelectedMaleRadioButton = useRef(false);\n  const isSelectedFemaleRadioButton = useRef(false);\n\n  const onGenderFilterClick = event => {\n    const clickedGenderInput = event.target;\n    const clickedGender = clickedGenderInput.value;\n    const filteredUsers = store.getState().allUsers.filter(user => user.gender === clickedGender);\n\n    if (clickedGender === \"Male\") {\n      isSelectedMaleRadioButton.current = true;\n      isSelectedFemaleRadioButton.current = false;\n    } else {\n      isSelectedFemaleRadioButton.current = true;\n      isSelectedMaleRadioButton.current = false;\n    }\n\n    store.dispatch({\n      type: ActionType.GetFilteredUsers,\n      payload: filteredUsers\n    });\n  };\n\n  const onClearGenderFilter = () => {\n    isSelectedMaleRadioButton.current = false;\n    isSelectedFemaleRadioButton.current = false;\n    store.dispatch({\n      type: ActionType.ClearFilteredUsers\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genderFilterSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genderFilterHeaderDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterButtons\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"filter\",\n          name: \"filters\",\n          onChange: onGenderFilterClick,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"dateFilter\",\n            checked: isSelectedMaleRadioButton.current,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 115\n            }, this),\n            label: \"Most Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Female\",\n            checked: isSelectedFemaleRadioButton.current,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 113\n            }, this),\n            label: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clearGenderFilterButton\",\n        onClick: onClearGenderFilter,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FilterPanel, \"/yhV6xwsfKpj2PIbJ+aL/0YBz+Q=\");\n\n_c = FilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/משימות להגשה/assigment 3 - servers managment/client/src/components/filterPanel/filterPanel.tsx"],"names":["React","useRef","store","Radio","RadioGroup","FormControlLabel","FormControl","ActionType","FilterPanel","isSelectedMaleRadioButton","isSelectedFemaleRadioButton","onGenderFilterClick","event","clickedGenderInput","target","clickedGender","value","filteredUsers","getState","allUsers","filter","user","gender","current","dispatch","type","GetFilteredUsers","payload","onClearGenderFilter","ClearFilteredUsers"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA6BC,MAA7B,QAA0C,OAA1C;AAEA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,mBAAP;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAElC,QAAMC,yBAAyB,GAAGR,MAAM,CAAC,KAAD,CAAxC;AACA,QAAMS,2BAA2B,GAAGT,MAAM,CAAC,KAAD,CAA1C;;AAEA,QAAMU,mBAAmB,GAAIC,KAAD,IAA2C;AACnE,UAAMC,kBAAoC,GAAGD,KAAK,CAACE,MAAnD;AACA,UAAMC,aAAqB,GAAGF,kBAAkB,CAACG,KAAjD;AACA,UAAMC,aAAqB,GAAGf,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,MAA1B,CAAmCC,IAAD,IAAgBA,IAAI,CAACC,MAAL,KAAgBP,aAAlE,CAA9B;;AAEA,QAAIA,aAAa,KAAK,MAAtB,EAA8B;AAC1BN,MAAAA,yBAAyB,CAACc,OAA1B,GAAoC,IAApC;AACAb,MAAAA,2BAA2B,CAACa,OAA5B,GAAsC,KAAtC;AACH,KAHD,MAGO;AACHb,MAAAA,2BAA2B,CAACa,OAA5B,GAAsC,IAAtC;AACAd,MAAAA,yBAAyB,CAACc,OAA1B,GAAoC,KAApC;AACH;;AAEDrB,IAAAA,KAAK,CAACsB,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAElB,UAAU,CAACmB,gBADN;AAEXC,MAAAA,OAAO,EAAEV;AAFE,KAAf;AAIH,GAjBD;;AAmBA,QAAMW,mBAAmB,GAAG,MAAM;AAC9BnB,IAAAA,yBAAyB,CAACc,OAA1B,GAAoC,KAApC;AACAb,IAAAA,2BAA2B,CAACa,OAA5B,GAAsC,KAAtC;AACArB,IAAAA,KAAK,CAACsB,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAElB,UAAU,CAACsB;AADN,KAAf;AAGH,GAND;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,GAAG,MAAf;AAAgB,wBAAW,QAA3B;AAAoC,UAAA,IAAI,EAAC,SAAzC;AAAmD,UAAA,QAAQ,EAAElB,mBAA7D;AAAA,kCACI,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC,YAAxB;AAAqC,YAAA,OAAO,EAAEF,yBAAyB,CAACc,OAAxE;AAAiF,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAA1F;AAAqG,YAAA,KAAK,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC,QAAxB;AAAiC,YAAA,OAAO,EAAEb,2BAA2B,CAACa,OAAtE;AAA+E,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAAxF;AAAmG,YAAA,KAAK,EAAC;AAAzG;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAA4C,QAAA,OAAO,EAAEK,mBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAlDuBpB,W;;KAAAA,W","sourcesContent":["import React, { ChangeEvent, useRef} from 'react';\r\nimport User from '../../models/User';\r\nimport {store} from '../../redux/Store';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { ActionType } from '../../redux/ActionType';\r\nimport './filterPanel.css';\r\n\r\nexport default function FilterPanel() {\r\n\r\n    const isSelectedMaleRadioButton = useRef(false);\r\n    const isSelectedFemaleRadioButton = useRef(false);\r\n\r\n    const onGenderFilterClick = (event : ChangeEvent<HTMLInputElement>) => {\r\n        const clickedGenderInput: HTMLInputElement = event.target as HTMLInputElement;\r\n        const clickedGender: string = clickedGenderInput.value as string;\r\n        const filteredUsers: User[] = store.getState().allUsers.filter( (user: User) => user.gender === clickedGender);\r\n\r\n        if (clickedGender === \"Male\") {\r\n            isSelectedMaleRadioButton.current = true;\r\n            isSelectedFemaleRadioButton.current = false;\r\n        } else {\r\n            isSelectedFemaleRadioButton.current = true;\r\n            isSelectedMaleRadioButton.current = false;\r\n        }\r\n        \r\n        store.dispatch({\r\n            type: ActionType.GetFilteredUsers,\r\n            payload: filteredUsers\r\n        });\r\n    }\r\n\r\n    const onClearGenderFilter = () => {\r\n        isSelectedMaleRadioButton.current = false;\r\n        isSelectedFemaleRadioButton.current = false;\r\n        store.dispatch({\r\n            type: ActionType.ClearFilteredUsers\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"genderFilterSection\">\r\n            <div className=\"genderFilterHeaderDiv\">\r\n                <h2>Filters</h2>\r\n            </div>\r\n            <div className=\"filterButtons\">\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup row aria-label=\"filter\" name=\"filters\" onChange={onGenderFilterClick} >\r\n                        <FormControlLabel value=\"dateFilter\" checked={isSelectedMaleRadioButton.current} control={<Radio />} label=\"Most Recent\" />\r\n                        <FormControlLabel value=\"Female\" checked={isSelectedFemaleRadioButton.current} control={<Radio />} label=\"Female\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                \r\n                <button className=\"clearGenderFilterButton\" onClick={onClearGenderFilter}>Clear</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}