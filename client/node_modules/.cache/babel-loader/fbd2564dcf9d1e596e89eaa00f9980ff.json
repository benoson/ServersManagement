{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React projects\\\\admin-dashboard\\\\admin-dashboard\\\\client\\\\src\\\\components\\\\genderFilterPanel\\\\GenderFilterPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { store } from '../../redux/Store';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { ActionType } from '../../redux/ActionType';\nimport './genderFilterPanel.css';\nexport default function GenderFilterPanel() {\n  _s();\n\n  const isClearRadioButtons = useRef(false);\n\n  const onGenderFilterClick = event => {\n    isClearRadioButtons.current = true;\n    const clickedGenderInput = event.target;\n    const clickedGender = clickedGenderInput.value;\n    const filteredUsers = store.getState().allUsers.filter(user => user.gender === clickedGender);\n    store.dispatch({\n      type: ActionType.GetFilteredUsers,\n      payload: filteredUsers\n    });\n  };\n\n  const onClearGenderFilter = () => {\n    isClearRadioButtons.current = false;\n    store.dispatch({\n      type: ActionType.ClearFilteredUsers\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genderFilterSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genderFilterHeaderDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filter By Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genderFilterButtons\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"gender\",\n          name: \"genders\",\n          onChange: onGenderFilterClick,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Male\",\n            checked: isClearRadioButtons.current,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 103\n            }, this),\n            label: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Female\",\n            checked: isClearRadioButtons.current,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 105\n            }, this),\n            label: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clearGenderFilterButton\",\n        onClick: onClearGenderFilter,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GenderFilterPanel, \"Dqief+MMI4sFicLhEwq7WkXvig0=\");\n\n_c = GenderFilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenderFilterPanel\");","map":{"version":3,"sources":["D:/React projects/admin-dashboard/admin-dashboard/client/src/components/genderFilterPanel/GenderFilterPanel.tsx"],"names":["React","useRef","store","Radio","RadioGroup","FormControlLabel","FormControl","ActionType","GenderFilterPanel","isClearRadioButtons","onGenderFilterClick","event","current","clickedGenderInput","target","clickedGender","value","filteredUsers","getState","allUsers","filter","user","gender","dispatch","type","GetFilteredUsers","payload","onClearGenderFilter","ClearFilteredUsers"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAwCC,MAAxC,QAAgE,OAAhE;AAEA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,yBAAP;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAExC,QAAMC,mBAAmB,GAAGR,MAAM,CAAC,KAAD,CAAlC;;AAEA,QAAMS,mBAAmB,GAAIC,KAAD,IAA2C;AACnEF,IAAAA,mBAAmB,CAACG,OAApB,GAA8B,IAA9B;AACA,UAAMC,kBAAoC,GAAGF,KAAK,CAACG,MAAnD;AACA,UAAMC,aAAqB,GAAGF,kBAAkB,CAACG,KAAjD;AACA,UAAMC,aAAqB,GAAGf,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,MAA1B,CAAmCC,IAAD,IAAgBA,IAAI,CAACC,MAAL,KAAgBP,aAAlE,CAA9B;AAEAb,IAAAA,KAAK,CAACqB,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAEjB,UAAU,CAACkB,gBADN;AAEXC,MAAAA,OAAO,EAAET;AAFE,KAAf;AAIH,GAVD;;AAYA,QAAMU,mBAAmB,GAAG,MAAM;AAC9BlB,IAAAA,mBAAmB,CAACG,OAApB,GAA8B,KAA9B;AACAV,IAAAA,KAAK,CAACqB,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAEjB,UAAU,CAACqB;AADN,KAAf;AAGH,GALD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,GAAG,MAAf;AAAgB,wBAAW,QAA3B;AAAoC,UAAA,IAAI,EAAC,SAAzC;AAAmD,UAAA,QAAQ,EAAElB,mBAA7D;AAAA,kCACI,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC,MAAxB;AAA+B,YAAA,OAAO,EAAED,mBAAmB,CAACG,OAA5D;AAAqE,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAA9E;AAAyF,YAAA,KAAK,EAAC;AAA/F;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC,QAAxB;AAAiC,YAAA,OAAO,EAAEH,mBAAmB,CAACG,OAA9D;AAAuE,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAAhF;AAA2F,YAAA,KAAK,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAA4C,QAAA,OAAO,EAAEe,mBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzCuBnB,iB;;KAAAA,iB","sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport User from '../../models/User';\r\nimport {store} from '../../redux/Store';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { ActionType } from '../../redux/ActionType';\r\nimport './genderFilterPanel.css';\r\n\r\nexport default function GenderFilterPanel() {\r\n\r\n    const isClearRadioButtons = useRef(false);\r\n\r\n    const onGenderFilterClick = (event : ChangeEvent<HTMLInputElement>) => {\r\n        isClearRadioButtons.current = true;\r\n        const clickedGenderInput: HTMLInputElement = event.target as HTMLInputElement;\r\n        const clickedGender: string = clickedGenderInput.value as string;\r\n        const filteredUsers: User[] = store.getState().allUsers.filter( (user: User) => user.gender === clickedGender);\r\n        \r\n        store.dispatch({\r\n            type: ActionType.GetFilteredUsers,\r\n            payload: filteredUsers\r\n        });\r\n    }\r\n\r\n    const onClearGenderFilter = () => {\r\n        isClearRadioButtons.current = false;\r\n        store.dispatch({\r\n            type: ActionType.ClearFilteredUsers\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"genderFilterSection\">\r\n            <div className=\"genderFilterHeaderDiv\">\r\n                <h2>Filter By Gender</h2>\r\n            </div>\r\n            <div className=\"genderFilterButtons\">\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup row aria-label=\"gender\" name=\"genders\" onChange={onGenderFilterClick} >\r\n                        <FormControlLabel value=\"Male\" checked={isClearRadioButtons.current} control={<Radio />} label=\"Male\" />\r\n                        <FormControlLabel value=\"Female\" checked={isClearRadioButtons.current} control={<Radio />} label=\"Female\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                \r\n                <button className=\"clearGenderFilterButton\" onClick={onClearGenderFilter}>Clear</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}