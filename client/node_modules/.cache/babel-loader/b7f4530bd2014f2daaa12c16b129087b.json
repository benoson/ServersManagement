{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05DE\\u05E9\\u05D9\\u05DE\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4\\\\assignment 3 - Servers Managment\\\\client\\\\src\\\\components\\\\serverComponent\\\\ServerComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport serverImage from '../../assets/server_logo.png';\nimport './serverComponent.css';\nexport default function ServerComponent({\n  serverDetails,\n  updateFilteredServers,\n  filterByActiveServers\n}) {\n  _s();\n\n  // Setting the state of the component => The state is the Online Status of the currect Server\n  const [isServerOnline, changeServerOnlineStatus] = useState(serverDetails.serverOnlineStatus);\n\n  const onOnlineStatusChange = async serverDetails => {\n    const serverID = serverDetails.serverID;\n    const newServerStatus = !isServerOnline;\n    await axios.put(`http://localhost:3001/servers/update_online_status/${serverID}`, {\n      newServerStatus\n    });\n    changeServerOnlineStatus(newServerStatus);\n    serverDetails.serverOnlineStatus = newServerStatus;\n    updateFilteredServers(serverDetails);\n    filterByActiveServers;\n  }; // Generating an element key for each time the component renders - this is for React's Diff Algorithm\n\n\n  const generateNewElementKey = () => {\n    let randomKey = Math.random() * 99999;\n    return randomKey;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"serverSquare\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serverSquareLeft\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serverImageDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: serverImage,\n          alt: \"server's image\",\n          className: \"serverImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serverSquareCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 23\n        }, this), \" \", serverDetails.serverName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this), \" \", serverDetails.serverIP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Hosting Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this), \" \", serverDetails.serverHostingCompany]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Time of Creation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this), \" \", serverDetails.serverCreationTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serverSquareRight\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Online Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => {\n          onOnlineStatusChange(serverDetails);\n        },\n        defaultChecked: isServerOnline\n      }, generateNewElementKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServerComponent, \"GBSF19Rm6N8JRVp4X2VaCCXDNmQ=\");\n\n_c = ServerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerComponent\");","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/משימות להגשה/assignment 3 - Servers Managment/client/src/components/serverComponent/ServerComponent.tsx"],"names":["React","useState","axios","serverImage","ServerComponent","serverDetails","updateFilteredServers","filterByActiveServers","isServerOnline","changeServerOnlineStatus","serverOnlineStatus","onOnlineStatusChange","serverID","newServerStatus","put","generateNewElementKey","randomKey","Math","random","serverName","serverIP","serverHostingCompany","serverCreationTime"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAO,uBAAP;AAGA,eAAe,SAASC,eAAT,CAAyB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,qBAAhB;AAAuCC,EAAAA;AAAvC,CAAzB,EAA8F;AAAA;;AAEzG;AACA,QAAM,CAACC,cAAD,EAAiBC,wBAAjB,IAA6CR,QAAQ,CAACI,aAAa,CAACK,kBAAf,CAA3D;;AAEA,QAAMC,oBAAoB,GAAG,MAAON,aAAP,IAAkC;AAC3D,UAAMO,QAAQ,GAAGP,aAAa,CAACO,QAA/B;AACA,UAAMC,eAAe,GAAG,CAACL,cAAzB;AACA,UAAMN,KAAK,CAACY,GAAN,CAAW,sDAAqDF,QAAS,EAAzE,EAA4E;AAACC,MAAAA;AAAD,KAA5E,CAAN;AACAJ,IAAAA,wBAAwB,CAACI,eAAD,CAAxB;AAEAR,IAAAA,aAAa,CAACK,kBAAd,GAAmCG,eAAnC;AACAP,IAAAA,qBAAqB,CAACD,aAAD,CAArB;AACAE,IAAAA,qBAAqB;AACxB,GATD,CALyG,CAgBzG;;;AACA,QAAMQ,qBAAqB,GAAG,MAAM;AAChC,QAAIC,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAgB,KAAhC;AACA,WAAOF,SAAP;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEb,WAAV;AAAuB,UAAA,GAAG,EAAC,gBAA3B;AAA4C,UAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAN,OAAoBE,aAAa,CAACc,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAN,OAAkBd,aAAa,CAACe,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAN,OAA+Bf,aAAa,CAACgB,oBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAN,OAAgChB,aAAa,CAACiB,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAcI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAqC,QAAA,IAAI,EAAC,UAA1C;AAAqD,QAAA,QAAQ,EAAE,MAAM;AAACX,UAAAA,oBAAoB,CAACN,aAAD,CAApB;AAAoC,SAA1G;AAA4G,QAAA,cAAc,EAAEG;AAA5H,SAAYO,qBAAqB,EAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA5CuBX,e;;KAAAA,e","sourcesContent":["import React, { useState } from 'react';\r\nimport Server from '../../models/Server';\r\nimport axios from 'axios';\r\nimport serverImage from '../../assets/server_logo.png';\r\nimport './serverComponent.css';\r\n\r\n\r\nexport default function ServerComponent({serverDetails, updateFilteredServers, filterByActiveServers} : any) {\r\n    \r\n    // Setting the state of the component => The state is the Online Status of the currect Server\r\n    const [isServerOnline, changeServerOnlineStatus] = useState(serverDetails.serverOnlineStatus);\r\n\r\n    const onOnlineStatusChange = async (serverDetails : Server) => {\r\n        const serverID = serverDetails.serverID;\r\n        const newServerStatus = !isServerOnline;\r\n        await axios.put(`http://localhost:3001/servers/update_online_status/${serverID}`, {newServerStatus});\r\n        changeServerOnlineStatus(newServerStatus);\r\n\r\n        serverDetails.serverOnlineStatus = newServerStatus;\r\n        updateFilteredServers(serverDetails);\r\n        filterByActiveServers\r\n    }\r\n\r\n    // Generating an element key for each time the component renders - this is for React's Diff Algorithm\r\n    const generateNewElementKey = () => {\r\n        let randomKey = Math.random() * 99999;\r\n        return randomKey;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"serverSquare\">\r\n            <div className=\"serverSquareLeft\">\r\n                <div className=\"serverImageDiv\">\r\n                    <img src={serverImage} alt=\"server's image\" className=\"serverImage\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"serverSquareCenter\">\r\n                <span><b>Name:</b> {serverDetails.serverName}</span>\r\n                <span><b>IP:</b> {serverDetails.serverIP}</span>\r\n                <span><b>Hosting Company:</b> {serverDetails.serverHostingCompany}</span>\r\n                <span><b>Time of Creation:</b> {serverDetails.serverCreationTime}</span>\r\n            </div>\r\n\r\n            <div className=\"serverSquareRight\">\r\n                <span>Online Status</span>\r\n                <input key={generateNewElementKey()} type=\"checkbox\" onChange={() => {onOnlineStatusChange(serverDetails)}} defaultChecked={isServerOnline} />\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}