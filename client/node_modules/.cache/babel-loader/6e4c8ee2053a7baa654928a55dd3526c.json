{"ast":null,"code":"export default function reducer(oldAppState, action) {\n  // Copying the old app state, in order to modify it, based on the action\n  const newAppState = { ...oldAppState\n  };\n\n  switch (action.type) {}\n\n  return newAppState;\n}","map":{"version":3,"sources":["D:/React projects/admin-dashboard/admin-dashboard/client/src/redux/Reducer.ts"],"names":["reducer","oldAppState","action","newAppState","type"],"mappings":"AAKA,eAAe,SAASA,OAAT,CAAkBC,WAAlB,EAA0CC,MAA1C,EAAqE;AAEhF;AACA,QAAMC,WAAW,GAAG,EAAC,GAAGF;AAAJ,GAApB;;AAEA,UAAQC,MAAM,CAACE,IAAf;;AAMA,SAAOD,WAAP;AACH","sourcesContent":["import AppState from \"./AppState\";\r\nimport Action from \"./Action\";\r\nimport { ActionType } from \"./ActionType\";\r\n\r\n\r\nexport default function reducer (oldAppState : AppState, action : Action): AppState {\r\n\r\n    // Copying the old app state, in order to modify it, based on the action\r\n    const newAppState = {...oldAppState};\r\n\r\n    switch (action.type) {\r\n        // case ActionType.GetAllVacations:\r\n        //     newAppState.allVacations = [...action.payload];\r\n        //     break;\r\n    }\r\n\r\n    return newAppState;\r\n}"]},"metadata":{},"sourceType":"module"}