{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React projects\\\\admin-dashboard\\\\admin-dashboard\\\\client\\\\src\\\\components\\\\genderFilterPanel\\\\GenderFilterPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { store } from '../../redux/Store';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { ActionType } from '../../redux/ActionType';\nimport './genderFilterPanel.css';\nexport default function GenderFilterPanel() {\n  _s();\n\n  const [isClearedRadioButtons, clearedRadioButtons] = useState(false);\n  const maleRadioButton = useRef(null);\n  const radioButtonsGroup = useRef(null);\n  useEffect(() => {\n    const unSubscribeStore = store.subscribe(() => clearedRadioButtons(true));\n  }, []);\n\n  const onGenderFilterClick = event => {\n    const clickedGenderInput = event.target;\n    const clickedGender = clickedGenderInput.value;\n    const filteredUsers = store.getState().allUsers.filter(user => user.gender === clickedGender);\n    store.dispatch({\n      type: ActionType.GetFilteredUsers,\n      payload: filteredUsers\n    });\n  };\n\n  const onClearGenderFilter = () => {\n    store.dispatch({\n      type: ActionType.ClearFilteredUsers\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genderFilterSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genderFilterHeaderDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filter By Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genderFilterButtons\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"gender\",\n          name: \"genders\",\n          onChange: onGenderFilterClick,\n          ref: radioButtonsGroup,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Male\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 65\n            }, this),\n            label: \"Male\",\n            ref: maleRadioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Female\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 67\n            }, this),\n            label: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clearGenderFilterButton\",\n        onClick: onClearGenderFilter,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GenderFilterPanel, \"otgW3etMbwi50oYQV9KJLqv1kxg=\");\n\n_c = GenderFilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenderFilterPanel\");","map":{"version":3,"sources":["D:/React projects/admin-dashboard/admin-dashboard/client/src/components/genderFilterPanel/GenderFilterPanel.tsx"],"names":["React","useEffect","useRef","useState","store","Radio","RadioGroup","FormControlLabel","FormControl","ActionType","GenderFilterPanel","isClearedRadioButtons","clearedRadioButtons","maleRadioButton","radioButtonsGroup","unSubscribeStore","subscribe","onGenderFilterClick","event","clickedGenderInput","target","clickedGender","value","filteredUsers","getState","allUsers","filter","user","gender","dispatch","type","GetFilteredUsers","payload","onClearGenderFilter","ClearFilteredUsers"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport User from '../../models/User';\r\nimport {store} from '../../redux/Store';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { ActionType } from '../../redux/ActionType';\r\nimport './genderFilterPanel.css';\r\n\r\nexport default function GenderFilterPanel() {\r\n\r\n    const [isClearedRadioButtons, clearedRadioButtons] = useState(false);\r\n    const maleRadioButton = useRef(null);\r\n    const radioButtonsGroup = useRef(null);\r\n\r\n    useEffect( () => {\r\n        const unSubscribeStore = store.subscribe(\r\n            () => clearedRadioButtons(true));\r\n    }, []);\r\n\r\n    const onGenderFilterClick = (event : ChangeEvent<HTMLInputElement>) => {\r\n        const clickedGenderInput: HTMLInputElement = event.target as HTMLInputElement;\r\n        const clickedGender: string = clickedGenderInput.value as string;\r\n        const filteredUsers: User[] = store.getState().allUsers.filter( (user: User) => user.gender === clickedGender);\r\n        \r\n        store.dispatch({\r\n            type: ActionType.GetFilteredUsers,\r\n            payload: filteredUsers\r\n        });\r\n    }\r\n\r\n    const onClearGenderFilter = () => {\r\n        store.dispatch({\r\n            type: ActionType.ClearFilteredUsers\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"genderFilterSection\">\r\n            <div className=\"genderFilterHeaderDiv\">\r\n                <h2>Filter By Gender</h2>\r\n            </div>\r\n            <div className=\"genderFilterButtons\">\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup row aria-label=\"gender\" name=\"genders\" onChange={onGenderFilterClick} ref={radioButtonsGroup}>\r\n                        <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" ref={maleRadioButton} />\r\n                        <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                \r\n                <button className=\"clearGenderFilterButton\" onClick={onClearGenderFilter}>Clear</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}