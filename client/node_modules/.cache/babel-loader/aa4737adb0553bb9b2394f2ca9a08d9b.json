{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05DE\\u05E9\\u05D9\\u05DE\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4\\\\assignment 3 - Servers Managment\\\\client\\\\src\\\\components\\\\home\\\\Home.tsx\";\nimport React, { Component } from 'react';\nimport ServersSquares from '../serversSquares/ServersSquares';\nimport FilterPanel from \"../filterPanel/filterPanel\";\nimport axios from 'axios';\nimport './home.css';\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.getAllServersFromServer();\n    };\n\n    this.getAllServersFromServer = async () => {\n      const serverResponse = await axios.get('http://localhost:3001/servers');\n      const allServers = serverResponse.data;\n      this.setState({\n        allServers: allServers,\n        filteredServers: allServers\n      });\n    };\n\n    this.filterServersInUI = newFilteredServers => {\n      this.setState({\n        filteredServers: newFilteredServers\n      });\n    };\n\n    this.updateFilteredServers = serverDetails => {\n      const updatedServerID = serverDetails.serverID;\n      const indexOfUpdatedServer = this.state.filteredServers.findIndex(server => server.serverID === updatedServerID);\n      const newFilteredServersArray = [...this.state.filteredServers];\n\n      if (indexOfUpdatedServer !== -1) {\n        newFilteredServersArray[indexOfUpdatedServer] = serverDetails;\n        console.log(newFilteredServersArray);\n      }\n\n      this.setState({\n        filteredServers: newFilteredServersArray\n      }, () => {\n        console.log(this.state.filteredServers);\n      });\n    };\n\n    this.clearFilteredServers = () => {\n      const allServers = [...this.state.allServers];\n      this.setState({\n        filteredServers: allServers\n      });\n    };\n\n    this.state = {\n      allServers: new Array(),\n      filteredServers: new Array()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n        filteredServers: this.state.filteredServers,\n        filterServersInUI: this.filterServersInUI,\n        clearFilteredServers: this.clearFilteredServers,\n        allServers: this.state.allServers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ServersSquares, {\n        filteredServers: this.state.filteredServers,\n        updateFilteredServers: this.updateFilteredServers,\n        filterServersInUI: this.filterServersInUI\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/משימות להגשה/assignment 3 - Servers Managment/client/src/components/home/Home.tsx"],"names":["React","Component","ServersSquares","FilterPanel","axios","Home","constructor","props","componentDidMount","getAllServersFromServer","serverResponse","get","allServers","data","setState","filteredServers","filterServersInUI","newFilteredServers","updateFilteredServers","serverDetails","updatedServerID","serverID","indexOfUpdatedServer","state","findIndex","server","newFilteredServersArray","console","log","clearFilteredServers","Array","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAQA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAAiD;AAE5DK,EAAAA,WAAW,CAACC,KAAD,EAAc;AACrB,UAAMA,KAAN;;AADqB,SASzBC,iBATyB,GASL,YAAY;AAC5B,WAAKC,uBAAL;AACH,KAXwB;;AAAA,SAazBA,uBAbyB,GAaC,YAAY;AAClC,YAAMC,cAAc,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAoB,+BAApB,CAA7B;AACA,YAAMC,UAAoB,GAAGF,cAAc,CAACG,IAA5C;AACA,WAAKC,QAAL,CAAc;AACVF,QAAAA,UAAU,EAAEA,UADF;AAEVG,QAAAA,eAAe,EAAEH;AAFP,OAAd;AAIH,KApBwB;;AAAA,SAsBzBI,iBAtByB,GAsBJC,kBAAD,IAAkC;AAClD,WAAKH,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEE;AADP,OAAd;AAGH,KA1BwB;;AAAA,SA4BzBC,qBA5ByB,GA4BAC,aAAD,IAA2B;AAC/C,YAAMC,eAAe,GAAGD,aAAa,CAACE,QAAtC;AACA,YAAMC,oBAAoB,GAAG,KAAKC,KAAL,CAAWR,eAAX,CAA2BS,SAA3B,CAAqCC,MAAM,IAAIA,MAAM,CAACJ,QAAP,KAAoBD,eAAnE,CAA7B;AACA,YAAMM,uBAAuB,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWR,eAAf,CAAhC;;AAEA,UAAIO,oBAAoB,KAAK,CAAC,CAA9B,EAAiC;AAC7BI,QAAAA,uBAAuB,CAACJ,oBAAD,CAAvB,GAAgDH,aAAhD;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYF,uBAAZ;AAEH;;AAED,WAAKZ,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEW;AADP,OAAd,EAEG,MAAK;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWR,eAAvB;AACH,OAJD;AAMH,KA7CwB;;AAAA,SA+CzBc,oBA/CyB,GA+CF,MAAM;AACzB,YAAMjB,UAAU,GAAG,CAAC,GAAG,KAAKW,KAAL,CAAWX,UAAf,CAAnB;AACA,WAAKE,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEH;AADP,OAAd;AAGH,KApDwB;;AAGrB,SAAKW,KAAL,GAAa;AACTX,MAAAA,UAAU,EAAE,IAAIkB,KAAJ,EADH;AAETf,MAAAA,eAAe,EAAG,IAAIe,KAAJ;AAFT,KAAb;AAIH;;AAgDDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,eAAe,EAAE,KAAKR,KAAL,CAAWR,eAAzC;AAA0D,QAAA,iBAAiB,EAAE,KAAKC,iBAAlF;AACI,QAAA,oBAAoB,EAAE,KAAKa,oBAD/B;AACqD,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWX;AAD5E;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,cAAD;AAAgB,QAAA,eAAe,EAAE,KAAKW,KAAL,CAAWR,eAA5C;AAA6D,QAAA,qBAAqB,EAAE,KAAKG,qBAAzF;AAAgH,QAAA,iBAAiB,EAAE,KAAKF;AAAxI;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAjE2D","sourcesContent":["import React, { Component } from 'react';\r\nimport ServersSquares from '../serversSquares/ServersSquares';\r\nimport FilterPanel from \"../filterPanel/filterPanel\";\r\nimport Server from '../../models/Server';\r\nimport axios from 'axios';\r\nimport './home.css';\r\n\r\n\r\ninterface serversState {\r\n    allServers : Server[];\r\n    filteredServers : Server[];\r\n}\r\n\r\nexport default class Home extends Component <any, serversState> {\r\n\r\n    constructor(props : any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allServers: new Array <Server> (),\r\n            filteredServers : new Array <Server> ()\r\n        };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.getAllServersFromServer();\r\n    }\r\n\r\n    getAllServersFromServer = async () => {\r\n        const serverResponse = await axios.get<Server[]>('http://localhost:3001/servers');\r\n        const allServers: Server[] = serverResponse.data;\r\n        this.setState({\r\n            allServers: allServers,\r\n            filteredServers: allServers\r\n        });\r\n    }\r\n\r\n    filterServersInUI = (newFilteredServers: Server[]) => {\r\n        this.setState({\r\n            filteredServers: newFilteredServers\r\n        });\r\n    }\r\n\r\n    updateFilteredServers = (serverDetails: Server) => {\r\n        const updatedServerID = serverDetails.serverID;\r\n        const indexOfUpdatedServer = this.state.filteredServers.findIndex(server => server.serverID === updatedServerID);\r\n        const newFilteredServersArray = [...this.state.filteredServers];\r\n\r\n        if (indexOfUpdatedServer !== -1) {\r\n            newFilteredServersArray[indexOfUpdatedServer] = serverDetails;\r\n            console.log(newFilteredServersArray);\r\n            \r\n        }\r\n        \r\n        this.setState({\r\n            filteredServers: newFilteredServersArray\r\n        }, ()=> {\r\n            console.log(this.state.filteredServers);\r\n        });\r\n\r\n    }\r\n\r\n    clearFilteredServers = () => {\r\n        const allServers = [...this.state.allServers];\r\n        this.setState({\r\n            filteredServers: allServers\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <FilterPanel filteredServers={this.state.filteredServers} filterServersInUI={this.filterServersInUI}\r\n                    clearFilteredServers={this.clearFilteredServers} allServers={this.state.allServers} />\r\n                <ServersSquares filteredServers={this.state.filteredServers} updateFilteredServers={this.updateFilteredServers} filterServersInUI={this.filterServersInUI} />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}