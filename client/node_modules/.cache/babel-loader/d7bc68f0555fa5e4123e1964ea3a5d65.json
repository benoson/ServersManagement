{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05DE\\u05E9\\u05D9\\u05DE\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4\\\\assigment 3 - servers managment\\\\client\\\\src\\\\components\\\\filterPanel\\\\filterPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport './filterPanel.css';\nexport default function FilterPanel({\n  filteredServers,\n  filterServersByMostRecentDates\n}) {\n  _s();\n\n  const isSelectedDateRadioButton = useRef(false);\n  const isSelectedActiveRadioButton = useRef(false);\n\n  const onFilterClick = event => {\n    const clickedFilterInput = event.target;\n    const clickedFilterValue = clickedFilterInput.value;\n\n    if (clickedFilterValue === \"dateFilter\") {\n      filterByMostRecentDate();\n      isSelectedDateRadioButton.current = true;\n      isSelectedActiveRadioButton.current = false;\n    } else {\n      isSelectedActiveRadioButton.current = true; // isSelectedDateRadioButton.current = false;\n    }\n  };\n\n  const filterByMostRecentDate = () => {\n    const sortedServersByMostRecentDates = filteredServers.sort((a, b) => {\n      const dateA = a.serverCreationTime;\n      const dateAYear = +dateA.split('/')[2];\n      const dateAMonth = +dateA.split('/')[1];\n      const dateADay = +dateA.split('/')[0];\n      const creationDateA = dateAYear + \"-\" + dateAMonth + \"-\" + dateADay;\n      const fullCreationDateA = new Date(creationDateA);\n      let c = new Date(fullCreationDateA);\n      const dateB = b.serverCreationTime;\n      const dateBYear = +dateB.split('/')[2];\n      const dateBMonth = +dateB.split('/')[1];\n      const dateBDay = +dateB.split('/')[0];\n      const creationdateB = dateBYear + \"-\" + dateBMonth + \"-\" + dateBDay;\n      const fullCreationdateB = new Date(creationdateB);\n      let d = new Date(fullCreationdateB);\n      return d.getTime() - c.getTime();\n    });\n    filterServersByMostRecentDates(sortedServersByMostRecentDates);\n  };\n\n  const onClearFilters = () => {\n    isSelectedDateRadioButton.current = false;\n    isSelectedActiveRadioButton.current = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filterSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterHeaderDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterButtons\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"filter\",\n          name: \"filters\",\n          onChange: onFilterClick,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"dateFilter\",\n            checked: isSelectedDateRadioButton.current,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 115\n            }, this),\n            label: \"Most Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"activeFilter\",\n            checked: isSelectedActiveRadioButton.current,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 119\n            }, this),\n            label: \"Active Servers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clearFilterButton\",\n        onClick: onClearFilters,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FilterPanel, \"3TaEi9xdt4itCt8mjOEs/4kO0BM=\");\n\n_c = FilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/משימות להגשה/assigment 3 - servers managment/client/src/components/filterPanel/filterPanel.tsx"],"names":["React","useRef","Radio","RadioGroup","FormControlLabel","FormControl","FilterPanel","filteredServers","filterServersByMostRecentDates","isSelectedDateRadioButton","isSelectedActiveRadioButton","onFilterClick","event","clickedFilterInput","target","clickedFilterValue","value","filterByMostRecentDate","current","sortedServersByMostRecentDates","sort","a","b","dateA","serverCreationTime","dateAYear","split","dateAMonth","dateADay","creationDateA","fullCreationDateA","Date","c","dateB","dateBYear","dateBMonth","dateBDay","creationdateB","fullCreationdateB","d","getTime","onClearFilters"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useRef} from 'react';\r\nimport Server from '../../models/Server';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport './filterPanel.css';\r\n\r\nexport default function FilterPanel({filteredServers, filterServersByMostRecentDates} : any) {\r\n\r\n    const isSelectedDateRadioButton = useRef(false);\r\n    const isSelectedActiveRadioButton = useRef(false);\r\n\r\n    const onFilterClick = (event : ChangeEvent<HTMLInputElement>) => {\r\n        const clickedFilterInput: HTMLInputElement = event.target as HTMLInputElement;\r\n        const clickedFilterValue: string = clickedFilterInput.value as string;\r\n\r\n        if (clickedFilterValue === \"dateFilter\") {\r\n            filterByMostRecentDate();\r\n            isSelectedDateRadioButton.current = true;\r\n            isSelectedActiveRadioButton.current = false;\r\n        }\r\n        else {\r\n            isSelectedActiveRadioButton.current = true;\r\n            // isSelectedDateRadioButton.current = false;\r\n        }\r\n\r\n    }\r\n\r\n    const filterByMostRecentDate = () => {\r\n        const sortedServersByMostRecentDates = filteredServers.sort((a: any, b: any) => {\r\n            const dateA = a.serverCreationTime;\r\n            const dateAYear = +dateA.split('/')[2];\r\n            const dateAMonth = +dateA.split('/')[1];\r\n            const dateADay = +dateA.split('/')[0];\r\n            const creationDateA = dateAYear+\"-\"+dateAMonth+\"-\"+dateADay;\r\n            const fullCreationDateA = new Date(creationDateA);\r\n            let c = new Date(fullCreationDateA);\r\n\r\n            const dateB = b.serverCreationTime;\r\n            const dateBYear = +dateB.split('/')[2];\r\n            const dateBMonth = +dateB.split('/')[1];\r\n            const dateBDay = +dateB.split('/')[0];\r\n            const creationdateB = dateBYear+\"-\"+dateBMonth+\"-\"+dateBDay;\r\n            const fullCreationdateB = new Date(creationdateB);\r\n            let d = new Date(fullCreationdateB);\r\n\r\n            return d.getTime() - c.getTime()\r\n        });\r\n        \r\n        filterServersByMostRecentDates(sortedServersByMostRecentDates);\r\n    }\r\n\r\n    const onClearFilters = () => {\r\n        isSelectedDateRadioButton.current = false;\r\n        isSelectedActiveRadioButton.current = false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"filterSection\">\r\n            <div className=\"filterHeaderDiv\">\r\n                <h2>Filters</h2>\r\n            </div>\r\n            <div className=\"filterButtons\">\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup row aria-label=\"filter\" name=\"filters\" onChange={onFilterClick} >\r\n                        <FormControlLabel value=\"dateFilter\" checked={isSelectedDateRadioButton.current} control={<Radio />} label=\"Most Recent\" />\r\n                        <FormControlLabel value=\"activeFilter\" checked={isSelectedActiveRadioButton.current} control={<Radio />} label=\"Active Servers\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                \r\n                <button className=\"clearFilterButton\" onClick={onClearFilters}>Clear</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}