{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05DE\\u05E9\\u05D9\\u05DE\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4\\\\assigment 3 - servers managment\\\\client\\\\src\\\\components\\\\queryFilterPanel\\\\QueryFilterPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport './queryFilterPanel.css';\nimport { store } from '../../redux/Store';\nimport { ActionType } from '../../redux/ActionType';\nexport default function QueryFilterPanel() {\n  _s();\n\n  const queryInput = useRef(null);\n\n  const onQuerySearch = () => {\n    const query = queryInput.current.children[1].children[0].value.trim();\n    const queryWords = query.split(\" \");\n\n    if (query === \"show all\") {\n      store.dispatch({\n        type: ActionType.GetFilteredUsers,\n        payload: store.getState().allUsers\n      });\n    } else if (queryWords[2] === \"age\") {\n      filterByAge(queryWords);\n    } else if (queryWords[2] === \"name\") {\n      filterByName(queryWords);\n    }\n  };\n  /*\r\n      IDEA - SPLITTING THE QUERY BY THE '=' CHARACTER....................\r\n  */\n\n\n  const filterByName = queryWords => {\n    if (queryWords[3] !== \"=\") {\n      alert(\"You Forgot \");\n    }\n  };\n\n  const filterByAge = queryWords => {\n    const operatorStr = queryWords[3];\n    const age = +queryWords[4];\n    const filteredUsersFromGlobalStore = store.getState().allUsers;\n\n    if (operatorStr === \">\") {\n      const filteredUsers = filteredUsersFromGlobalStore.filter(user => user.age > age);\n      store.dispatch({\n        type: ActionType.GetFilteredUsers,\n        payload: filteredUsers\n      });\n    } else if (operatorStr === \"<\") {\n      const filteredUsers = filteredUsersFromGlobalStore.filter(user => user.age < age);\n      store.dispatch({\n        type: ActionType.GetFilteredUsers,\n        payload: filteredUsers\n      });\n    } else if (operatorStr === \"=\") {\n      const filteredUsers = filteredUsersFromGlobalStore.filter(user => user.age === age);\n      store.dispatch({\n        type: ActionType.GetFilteredUsers,\n        payload: filteredUsers\n      });\n    } else {\n      alert(\"Illigal Operator\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queryFilterSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"queryFilterHeaderDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filter By a Custom Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customQueryInputSection\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"customQueryInputField\",\n        ref: queryInput,\n        id: \"outlined-basic\",\n        label: \"Your Custom Query\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchQueryButton\",\n        onClick: onQuerySearch,\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"resetAllFiltersButton\",\n      children: \"Reset All Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QueryFilterPanel, \"30cW6ac/F6KnZKpoZCrNl3OtbEc=\");\n\n_c = QueryFilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueryFilterPanel\");","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/משימות להגשה/assigment 3 - servers managment/client/src/components/queryFilterPanel/QueryFilterPanel.tsx"],"names":["React","useRef","TextField","store","ActionType","QueryFilterPanel","queryInput","onQuerySearch","query","current","children","value","trim","queryWords","split","dispatch","type","GetFilteredUsers","payload","getState","allUsers","filterByAge","filterByName","alert","operatorStr","age","filteredUsersFromGlobalStore","filteredUsers","filter","user"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './queryFilterPanel.css';\r\nimport User from '../../models/User';\r\nimport { store } from '../../redux/Store';\r\nimport { ActionType } from '../../redux/ActionType';\r\n\r\n\r\nexport default function QueryFilterPanel() {\r\n\r\n    const queryInput = useRef(null);\r\n\r\n    const onQuerySearch = () => {\r\n        const query: string = queryInput.current.children[1].children[0].value.trim() as string;\r\n        const queryWords: string[] = query.split(\" \");\r\n\r\n        if (query === \"show all\") {\r\n            store.dispatch({\r\n                type: ActionType.GetFilteredUsers,\r\n                payload: store.getState().allUsers\r\n            });\r\n        }\r\n\r\n        else if (queryWords[2] === \"age\") {\r\n            filterByAge(queryWords);\r\n        }\r\n\r\n        else if (queryWords[2] === \"name\") {\r\n            filterByName(queryWords);\r\n        }\r\n    }\r\n\r\n    /*\r\n        IDEA - SPLITTING THE QUERY BY THE '=' CHARACTER....................\r\n    */\r\n\r\n    const filterByName = (queryWords: string[]) => {\r\n        if (queryWords[3] !== \"=\") {\r\n            alert(\"You Forgot \")\r\n        }\r\n    }\r\n\r\n\r\n    const filterByAge = (queryWords : string[]) => {\r\n        const operatorStr: string = queryWords[3] as string;\r\n        const age: number = +queryWords[4] as number;\r\n        \r\n        const filteredUsersFromGlobalStore: User[] = store.getState().allUsers;\r\n\r\n        if (operatorStr === \">\") {\r\n            const filteredUsers = filteredUsersFromGlobalStore.filter( (user: User) => user.age > age );\r\n            store.dispatch({\r\n                type: ActionType.GetFilteredUsers,\r\n                payload: filteredUsers\r\n            });\r\n        }\r\n\r\n        else if (operatorStr === \"<\") {\r\n            const filteredUsers = filteredUsersFromGlobalStore.filter( (user: User) => user.age < age );\r\n            store.dispatch({\r\n                type: ActionType.GetFilteredUsers,\r\n                payload: filteredUsers\r\n            });\r\n        }\r\n\r\n        else if (operatorStr === \"=\") {\r\n            const filteredUsers = filteredUsersFromGlobalStore.filter( (user: User) => user.age === age );\r\n            store.dispatch({\r\n                type: ActionType.GetFilteredUsers,\r\n                payload: filteredUsers\r\n            });\r\n        }\r\n\r\n        else {\r\n            alert(\"Illigal Operator\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"queryFilterSection\">\r\n            <div className=\"queryFilterHeaderDiv\">\r\n                <h2>Filter By a Custom Query</h2>\r\n            </div>\r\n            <div className=\"customQueryInputSection\">\r\n                <TextField className=\"customQueryInputField\" ref={queryInput} id=\"outlined-basic\" label=\"Your Custom Query\" variant=\"outlined\" />\r\n                <button className=\"searchQueryButton\" onClick={onQuerySearch}>Go</button>\r\n            </div>\r\n\r\n            <button className=\"resetAllFiltersButton\">Reset All Filters</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}