{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\John Bryce\\\\\\u05DE\\u05E9\\u05D9\\u05DE\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4\\\\assigment 3 - servers managment\\\\client\\\\src\\\\components\\\\home\\\\Home.tsx\";\nimport React, { Component } from 'react';\nimport ServersSquares from '../serversSquares/ServersSquares';\nimport FilterPanel from '../filterPanel/filterPanel';\nimport { store } from '../../redux/Store';\nimport { ActionType } from '../../redux/ActionType';\nimport './home.css';\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.unSubscribeStore = void 0;\n\n    this.componentDidMount = async () => {\n      this.unSubscribeStore = store.subscribe(() => this.setState({\n        filteredServers: store.getState().filteredUsers\n      }));\n      this.getAllServersFromServer();\n      this.setState({\n        allServers: users,\n        filteredServers: users\n      }, () => {\n        store.dispatch({\n          type: ActionType.GetAllUsers,\n          payload: this.state.allServers\n        });\n        store.dispatch({\n          type: ActionType.GetFilteredUsers,\n          payload: this.state.filteredServers\n        });\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      this.unSubscribeStore();\n    };\n\n    this.state = {\n      allServers: new Array(),\n      filteredServers: new Array()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(FilterPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ServersSquares, {\n        filteredUsers: this.state.filteredServers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ben/Desktop/John Bryce/משימות להגשה/assigment 3 - servers managment/client/src/components/home/Home.tsx"],"names":["React","Component","ServersSquares","FilterPanel","store","ActionType","Home","constructor","props","unSubscribeStore","componentDidMount","subscribe","setState","filteredServers","getState","filteredUsers","getAllServersFromServer","allServers","users","dispatch","type","GetAllUsers","payload","state","GetFilteredUsers","componentWillUnmount","Array","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,YAAP;AAQA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAAiD;AAI5DM,EAAAA,WAAW,CAACC,KAAD,EAAc;AACrB,UAAMA,KAAN;AADqB,SAFjBC,gBAEiB;;AAAA,SASzBC,iBATyB,GASL,YAAY;AAE5B,WAAKD,gBAAL,GAAwBL,KAAK,CAACO,SAAN,CACpB,MAAM,KAAKC,QAAL,CAAe;AACjBC,QAAAA,eAAe,EAAET,KAAK,CAACU,QAAN,GAAiBC;AADjB,OAAf,CADc,CAAxB;AAMA,WAAKC,uBAAL;AAEA,WAAKJ,QAAL,CAAc;AACVK,QAAAA,UAAU,EAAEC,KADF;AAEVL,QAAAA,eAAe,EAAEK;AAFP,OAAd,EAGG,MAAM;AACLd,QAAAA,KAAK,CAACe,QAAN,CAAe;AACXC,UAAAA,IAAI,EAAEf,UAAU,CAACgB,WADN;AAEXC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWN;AAFT,SAAf;AAKAb,QAAAA,KAAK,CAACe,QAAN,CAAe;AACXC,UAAAA,IAAI,EAAEf,UAAU,CAACmB,gBADN;AAEXF,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWV;AAFT,SAAf;AAIH,OAbD;AAcH,KAjCwB;;AAAA,SAmCzBY,oBAnCyB,GAmCF,MAAM;AACzB,WAAKhB,gBAAL;AACH,KArCwB;;AAGrB,SAAKc,KAAL,GAAa;AACTN,MAAAA,UAAU,EAAE,IAAIS,KAAJ,EADH;AAETb,MAAAA,eAAe,EAAG,IAAIa,KAAJ;AAFT,KAAb;AAIH;;AAiCDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWV;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAnD2D","sourcesContent":["import React, { Component } from 'react';\r\nimport ServersSquares from '../serversSquares/ServersSquares';\r\nimport FilterPanel from '../filterPanel/filterPanel';\r\nimport Server from '../../models/Server';\r\nimport { store } from '../../redux/Store';\r\nimport { Unsubscribe } from 'redux';\r\nimport { ActionType } from '../../redux/ActionType';\r\nimport './home.css';\r\n\r\n\r\ninterface serversState {\r\n    allServers : Server[];\r\n    filteredServers : Server[];\r\n}\r\n\r\nexport default class Home extends Component <any, serversState> {\r\n\r\n    private unSubscribeStore : Unsubscribe;\r\n\r\n    constructor(props : any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allServers: new Array <Server> (),\r\n            filteredServers : new Array <Server> ()\r\n        };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        this.unSubscribeStore = store.subscribe(\r\n            () => this.setState ({\r\n                filteredServers: store.getState().filteredUsers\r\n            })\r\n        );\r\n\r\n        this.getAllServersFromServer();\r\n\r\n        this.setState({\r\n            allServers: users,\r\n            filteredServers: users\r\n        }, () => {\r\n            store.dispatch({\r\n                type: ActionType.GetAllUsers,\r\n                payload: this.state.allServers\r\n            });\r\n\r\n            store.dispatch({\r\n                type: ActionType.GetFilteredUsers,\r\n                payload: this.state.filteredServers\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.unSubscribeStore();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <FilterPanel />\r\n                <ServersSquares filteredUsers={this.state.filteredServers} />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}